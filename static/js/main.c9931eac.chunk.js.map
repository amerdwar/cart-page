{"version":3,"sources":["api/products.js","pages/home.js","components/productItem.js","pages/products.js","components/cartItem.js","store/actions/actions.js","store/actions/types.js","pages/cart.js","pages/product.js","components/cartIcon.js","store/store.js","store/reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["getAll","Promise","resolve","products","Home","state","loading","then","data","setTimeout","setState","this","className","style","width","height","role","nextIcon","aria-hidden","prevIcon","Carousel","map","product","index","Item","key","to","id","src","image","alt","name","Caption","description","Component","ProductItem","props","price","Products","CartItem","removeFromCart","item","quantity","onClick","connect","dispatch","type","Cart","show","confirm","handleClose","handleOk","placeOrderFun","clearCartFun","btnPlaceOrderClasses","classNames","enableBtnPlaceOrder","btnClearCartClasses","enableBtnClearCart","cartItems","total","disabled","Modal","modalShow","onHide","Header","closeButton","Title","Body","Footer","Button","variant","clearCart","placeOrder","enableBtn","undefined","cart","length","reduce","code","message","res","result","createPlaceOrder","Product","changeQuantity","event","target","value","num","parseInt","alert","addToCart","q","find","getProductById","match","params","producti","btnAddtoCartClasses","max","min","onChange","totalQuantity","getTotalQuantity","ownProps","CartIcon","initialState","localStorage","getItem","JSON","parse","e","loadStateFromLocalStorage","enableReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","applyThunk","applyMiddleware","thunk","appReducer","combineReducers","action","newState","addToCard","findIndex","splice","store","createStore","compose","subscribe","throttle","getState","console","log","setItem","stringify","App","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","path","component","exact","AppWithStore","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c9931eac.chunk.js","sourcesContent":["import products from './products.json'\r\n\r\nexport function getAll() {\r\n    return Promise.resolve(products);\r\n}\r\nexport function getProductById(id) {\r\n    const product = products.find(item => item.id === id);\r\n    return Promise.resolve(product);\r\n}\r\n\r\nexport function placeOrder() {\r\n    return Promise.resolve({code:200,message:\"The order has been successfully placed\"});\r\n  //  return Promise.resolve({code:503,message:\"Failed\"});\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { getAll } from '../api/products';\r\nimport {Link} from 'react-router-dom';\r\nexport default class Home extends Component {\r\n  state = {\r\n    loading: true,\r\n    products: []\r\n  };\r\n  componentDidMount() {\r\n    getAll().then(data => {\r\n      setTimeout(() =>\r\n        this.setState({\r\n          loading: false,\r\n          products: data\r\n        }), 1000);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    if (this.state.loading)\r\n      return (<div className=\"text-center\"><br /><br /><div className=\"text-center  spinner-border  text-primary\" style={{ width: \"10rem\", height: \"10rem\" }}\r\n        role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div></div>);\r\n\r\nlet nextIcon =  <span aria-hidden=\"true\" className=\"fa fa-chevron-circle-right blue-style\" />;\r\nlet prevIcon =  <span aria-hidden=\"true\" className=\"fa fa-chevron-circle-left blue-style\" />;\r\n    return (<div className=\"row align-items-center\">\r\n      <div className=\"col\">\r\n      <br/>\r\n      <br/>\r\n      <Carousel nextIcon={nextIcon} prevIcon={prevIcon}>\r\n\r\n        {this.state.products.map((product, index) =>\r\n          \r\n          <Carousel.Item key={index}>\r\n          <Link to={\"/products/\"+product.id}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={product.image}\r\n              alt={product.name}\r\n            />\r\n            <Carousel.Caption >\r\n            <div id=\"homeCaption\">\r\n              <h3>{product.name}</h3>\r\n              </div>\r\n          <div id=\"homeDescription\">\r\n              <p>{product.description}</p>\r\n              </div>\r\n         \r\n            </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n\r\n        )\r\n        }\r\n\r\n      </Carousel></div></div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default class ProductItem extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\" >\r\n                <img src={this.props.product.image} className=\"card-img-top \" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n        <p className=\"h5 card-title\">{this.props.product.name}</p>\r\n        <p className=\"card-text\">{this.props.product.price} $</p>\r\n                    <Link to={\"/products/\"+this.props.product.id} className=\"btn btn-primary\">Details</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ProductItem from '../components/productItem'\r\nimport  {getAll}  from '../api/products'\r\nexport default class Products extends Component {\r\n\r\n    state = {\r\n        loading:true,\r\n        products: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        getAll().then(data => {\r\nsetTimeout(()=>\r\n            this.setState({\r\n                loading:false,\r\n                products: data\r\n            }),1000);\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.loading)\r\n        return (<div className=\"text-center\"><br/><br/><div className=\"text-center  spinner-border  text-primary\" style={{width: \"10rem\", height: \"10rem\"}} \r\n        role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div></div>);\r\n\r\n        return <div>\r\n            <h1>Products</h1>\r\n            <div className=\"row\">\r\n                {this.state.products.map((product, index) =>\r\n                    <div className=\"col-lg-4 col-md-6 col-sm-12\" key={index}>\r\n                        <ProductItem product={product} />\r\n                    </div>)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeFromCart } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\n\r\nclass CartItem extends Component {\r\n    removeFromCart = () => {\r\n\r\n        this.props.removeFromCart(this.props.item.product.id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\" >\r\n                <img src={this.props.item.product.image} className=\"card-img-top \" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.item.product.name}</h5>\r\n                    <p className=\"card-text\">{this.props.item.product.price} $</p>\r\n                    <br />\r\n        Quantity: {this.props.item.quantity}\r\n                    <br />\r\n        Total: {this.props.item.product.price * this.props.item.quantity}$\r\n        <br />\r\n                    <br />\r\n                    <Link to=\"#\" className=\"btn btn-danger\" onClick={this.removeFromCart}>\r\n                        <i className='fa fa-trash'></i> Delete</Link>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeFromCart: (id) => dispatch(removeFromCart(id)),\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);","import { ADD_TO_CART, REMOVE_FROME_CART, CLEAR_CART ,PLACE_ORDER} from './types'\r\nimport {placeOrder as placeOrderApi}  from '../../api/products'\r\nexport function addToCart(product, quantity) {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    product,\r\n    quantity\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction createPlaceOrder(res) {\r\n  return {\r\n    type: PLACE_ORDER,\r\n    result:res\r\n  }\r\n}\r\n\r\n//use thunk for placeOrder ,call api and then dispatch (async use case)\r\nexport function placeOrder() {\r\n  return (\r\n    (dispatch) => {\r\n      placeOrderApi().then(res=>\r\n  dispatch(createPlaceOrder(res))\r\n\r\n );\r\n    })\r\n\r\n}\r\n\r\n//test thunk  (action creation usecase)\r\nexport function clearCart() {\r\n  return dispatch=>dispatch({type:CLEAR_CART});\r\n}\r\n\r\n\r\n\r\nexport function removeFromCart(id) {\r\n\r\n  return {\r\n    type: REMOVE_FROME_CART,\r\n    id\r\n  };\r\n\r\n}","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROME_CART = 'REMOVE_FROME_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const PLACE_ORDER = 'PLACE_ORDER';","import React, { Component } from \"react\";\r\nimport CartItem from '../components/cartItem'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { clearCart, placeOrder } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\nimport classNames from 'classnames'\r\nclass Cart extends Component {\r\n    state = {\r\n            show: false,\r\nconfirm:''\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            show: false\r\n\r\n        });\r\n    }\r\n    handleOk = () => {\r\n        this.setState(\r\n            {\r\n                show: false\r\n            }\r\n        );\r\n    }\r\n\r\n    placeOrderFun = () => {\r\n        this.setState({\r\n            show:true,\r\n            confirm:'placeOrder'\r\n        });\r\n    }\r\n    clearCartFun = () => {\r\n        this.setState({\r\n            show:true,\r\n            confirm:'clearCart'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let btnPlaceOrderClasses =\r\n            classNames('btn btn-primary btn-block', { 'disabled': !this.props.enableBtnPlaceOrder });\r\n        let btnClearCartClasses =\r\n            classNames('btn btn-danger btn-block', { 'disabled': !this.props.enableBtnClearCart });\r\n\r\n        return <div>\r\n            <h1>Cart</h1>\r\n            <div className=\"row\">\r\n\r\n                {this.props.cartItems.map((item) =>\r\n                    <div className=\"col-lg-4 col-md-6 col-sm-12\" key={item.product.id}>\r\n                        <CartItem item={item} />\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <br />\r\n            <h3>\r\n                Total: {this.props.total}$\r\n            </h3>\r\n\r\n            <button disabled={!this.props.enableBtnPlaceOrder} className={btnPlaceOrderClasses} onClick={this.placeOrderFun}>Place order</button>\r\n            <button disabled={!this.props.enableBtnClearCart} className={btnClearCartClasses} onClick={this.clearCartFun}>Clear cart</button>\r\n\r\n\r\n\r\n\r\n            <Modal show={this.state.show?this.props.modalShow:this.state.show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n            <Modal.Body>{'Are you sure want to '+ (this.state.confirm==='clearCart'?'clear cart?':'place order ?')}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                        Close\r\n                         </Button>\r\n                    <Button variant=\"primary\" onClick={ (this.state.confirm==='clearCart'?this.props.clearCart :this.props.placeOrder )} >\r\n                        Ok\r\n                           </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div >;\r\n    }\r\n}\r\nconst mountStateToProps = (state) => {\r\n    var enableBtn = false;\r\n\r\n    if (typeof (state.cart) != undefined && state.cart.length > 0)\r\n        enableBtn = true;\r\n\r\n    return {\r\n        cartItems: state.cart,\r\n        total: state.cart.reduce((total, item) => total + item.quantity * item.product.price, 0),\r\n        enableBtnPlaceOrder: enableBtn,\r\n        enableBtnClearCart: enableBtn,\r\n        modalShow:enableBtn\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         clearCart: () => dispatch(clearCart()),\r\n//     };\r\n// }\r\n\r\nexport default connect(mountStateToProps, { clearCart, placeOrder })(Cart);","import React, { Component } from \"react\";\r\nimport { getProductById } from '../api/products'\r\nimport { addToCart } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\nimport classNames from 'classnames'\r\nclass Product extends Component {\r\n    state = {\r\n        loading: true,\r\n        product: {},\r\n        quantity: 0\r\n    };\r\n    changeQuantity = (event) => {\r\n        if(!!!event.target.value)\r\n            return;\r\n        let num = parseInt(event.target.value);\r\n        if (num > 20) {\r\n            alert(\"Max number is 20\");\r\n            \r\n\r\n            this.setState({\r\n                quantity: 20\r\n            });\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                quantity: num\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n\r\n        getProductById(id).then(producti =>\r\n            setTimeout(() =>\r\n                this.setState({ product: producti, loading: false }), 1000\r\n\r\n            ));\r\n\r\n    };\r\n    addToCart = (product) => {\r\n        const q = this.state.quantity;\r\n        this.setState({ quantity: 0 });\r\n        return this.props.addToCart(product, q);\r\n    };\r\n    render() {\r\n        if (this.state.loading)\r\n            return (<div className=\"text-center\"><br /><br /><div className=\"text-center  spinner-border  text-primary\" style={{ width: \"10rem\", height: \"10rem\" }}\r\n                role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div></div>);\r\n\r\n\r\n        const product = this.state.product;\r\n\r\n        let btnAddtoCartClasses =\r\n            classNames('btn btn-primary btn-block', { 'disabled': this.state.quantity === 0 });\r\n\r\n        return (\r\n   \r\n        <div className=\"row pt-4\">\r\n    \r\n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <img alt=\"...\" src={product.image} width={'100%'} ></img>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <h1>{product.name}</h1>\r\n                <p>Price: {product.price}$</p>\r\n                <p> {product.description}</p>\r\n\r\n                <input type=\"number\" max=\"20\" min=\"0\" value={this.state.quantity} onChange={this.changeQuantity} />\r\n                <br />\r\n                <br />\r\n                <p> Total: {this.state.quantity * product.price} $</p>\r\n                <button disabled={(this.state.quantity === 0)} className={btnAddtoCartClasses} onClick={() => this.addToCart(product)} >\r\n                    Add to cart{\" \"}\r\n                    <span className=\"badge badge-danger\" >{this.props.totalQuantity}</span>\r\n                </button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (product, quantity) => dispatch(addToCart(product, quantity)),\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        totalQuantity: getTotalQuantity(state, ownProps.match.params.id)\r\n    }\r\n}\r\nfunction getTotalQuantity(state, id) {\r\n    let item = state.cart.find(item => item.product.id === id);\r\n    if (item) {\r\n\r\n        return item.quantity;\r\n    } else {\r\n        return \"0\";\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React, { Component } from \"react\";\r\nimport './cartIcon.css'\r\nimport { connect } from \"react-redux\"\r\n\r\nexport class CartIcon extends Component {\r\n    render() {\r\n        return (<div id=\"cart-icon\">\r\n\r\n\r\n            <div className=\"row\" >\r\n                <div className=\"col-1\" />\r\n                <div className=\"col-11\">\r\n                <span className=\"badge badge-danger\">{this.props.totalQuantity}</span>\r\n                </div>\r\n            </div> \r\n            <div className=\"row\">\r\n                <i className=\"fa fa-shopping-cart\" > </i>\r\n            </div>\r\n\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        totalQuantity: state.cart.reduce((total, item) => total + parseInt(item.quantity), 0)\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(CartIcon);","import { createStore, compose, applyMiddleware,combineReducers } from 'redux'\r\nimport cartReducer from './reducers/index'\r\nimport thunk from \"redux-thunk\"\r\nimport throttle from 'lodash.throttle'\r\nfunction loadStateFromLocalStorage() {\r\n    try {\r\n        const state = localStorage.getItem('cart');\r\n        if (state !== null) {\r\n            return JSON.parse(state);\r\n\r\n        }\r\n    } catch (e) {\r\n        //ignore error \r\n    }\r\n  \r\n        return {\r\n            cart:[]\r\n        };\r\n    \r\n}\r\n\r\nfunction saveToLocalStorage(state) {\r\n    console.log('save state');\r\n    localStorage.setItem('cart', JSON.stringify(state))\r\n}\r\n\r\nconst initialState = loadStateFromLocalStorage();\r\n\r\n\r\nconst enableReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst applyThunk = applyMiddleware(thunk);\r\nconst appReducer =  combineReducers({\r\n    cart:cartReducer\r\n});\r\n\r\n\r\n\r\nconst store = createStore(appReducer, initialState, compose(applyThunk, enableReduxDevTools));\r\n\r\n//save state every 2 s\r\n\r\n    store.subscribe(throttle(() => \r\nsaveToLocalStorage(store.getState()),2000));\r\nexport default store;","import { ADD_TO_CART, REMOVE_FROME_CART, CLEAR_CART,PLACE_ORDER } from \"../actions/types\";\r\n\r\n\r\nexport default function cartReducer(state, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_TO_CART: {\r\n            return addToCard(state, action);\r\n        }\r\n        case REMOVE_FROME_CART: {\r\n            return removeFromCart(state, action);\r\n        }\r\n        case PLACE_ORDER: {\r\n            return placeOrder(state, action);\r\n        }\r\n        case CLEAR_CART: {\r\n            return clearCart(state, action);\r\n        }\r\n    \r\n    \r\n\r\n        default:\r\n            if (state===undefined)\r\n            return [];\r\n            else\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nfunction addToCard(state, action) {\r\n    //if the product is in the cart so increese the quantity else add it \r\n    let newState = [...state];\r\n    let item = newState.find(item => item.product.id === action.product.id);\r\n    if (item) {\r\n        item.quantity = parseInt(action.quantity) + parseInt(item.quantity);\r\n    return newState;\r\n    } else {\r\n        return  [\r\n                ...state,\r\n                {\r\n                    product: action.product,\r\n                    quantity: action.quantity\r\n                }\r\n                ];\r\n        \r\n    }\r\n\r\n}\r\n\r\nfunction removeFromCart(state, action) {\r\n    if (!window.confirm(\"Are yous sure want to delete this item.\"))\r\n    return state;\r\n\r\n    let newState = [...state];\r\n    let index = newState.findIndex(item => item.product.id === action.id);\r\n    if (index > -1)\r\n        newState.splice(index, 1)\r\n    return newState;\r\n}\r\n\r\nfunction placeOrder(state, action) {\r\n    //alert(action.result.message);\r\n    if (action.result.code === 200)\r\n        return [];\r\n    else\r\n\r\n     return state;\r\n}\r\n\r\nfunction clearCart(state, action) {\r\n\r\n        return [];\r\n \r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './pages/home'\nimport Products from './pages/products'\nimport Cart from './pages/cart'\nimport Product from './pages/product'\nimport CartIcon from './components/cartIcon'\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nimport { Nav, Navbar } from 'react-bootstrap'\nclass App extends Component {\n  render() {\n\n    return (\n      <Router>\n        <div className=\"container\">\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"/\"><h3>Home</h3></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/products\"><h4>products</h4></Nav.Link>\n                <Nav.Link href=\"/cart\"><h4>cart</h4></Nav.Link>\n              </Nav>\n              <Nav>\n                <Nav.Link href=\"/cart\"> <CartIcon /> </Nav.Link>\n              </Nav>\n\n            </Navbar.Collapse>\n\n          </Navbar>\n          <Route path='/' component={Home} exact />\n          <Route path='/products' component={Products} exact />\n          <Route path='/products/:id' component={Product} />\n          <Route path='/cart' component={Cart} />\n\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction AppWithStore() {\n\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n}\n\nexport default AppWithStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}